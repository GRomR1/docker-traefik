version: '3'

services:
  traefik:
    image: traefik:v2.1
    container_name: traefik
    command:
      - --api=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=true
      - --accesslog=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --certificatesResolvers.letsencrypt.acme.email=r.gainanov@skoltech.ru
      - --certificatesResolvers.letsencrypt.acme.storage=/acme/acme.json
      # Uncomment the line to use Let's Encrypt's staging server,
      - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesResolvers.letsencrypt.acme.httpChallenge=true
      - --certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web
    labels:
      - traefik.http.routers.api.entrypoints=websecure,web
      - traefik.http.routers.api.rule=Host(`dashboard.example.com`)
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      # Connect the router `api` to internal service 'api'
      - traefik.http.routers.api.service=api@internal
      # Referencing an `auth` middleware
      - traefik.http.routers.api.middlewares=auth
      # Declaring a middleware with name `auth`
      # Declaring the user list - echo $(htpasswd -nb admin password) | sed -e s/\\$/\\$\\$/g
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$mW/l73Bf$$WsprkCzl5.QbLdY9c4kdB0"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme:/acme

  whoami:
    image: containous/whoami
    container_name: whoami
    labels:
      - traefik.http.routers.whoami.entrypoints=websecure,web
      - traefik.http.routers.whoami.rule=Host(`whoami.example.com`)
      - traefik.http.routers.whoami.tls=true
      - traefik.http.routers.whoami.tls.certresolver=letsencrypt
